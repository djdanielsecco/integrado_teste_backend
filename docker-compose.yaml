services:
  mongodb:
    image: mongo
    ports:
      - '0.0.0.0:27017:27017'
    networks:
      - mongonetwork
  dev:
   container_name: nestjs_api_dev
   image: nestjs-api-dev:1.0.0
   build:
       context: .
       target: development
       dockerfile: ./Dockerfile
   working_dir: /usr/src/app/backend  
   stdin_open: true 
   tty: true 
   command: /bin/bash 
   ports:
       - 3000:3000
   networks:
       - mongonetwork 
   volumes:
       - .:/usr/src/app
   restart: unless-stopped
   depends_on:
      - mongodb
  builder:
   container_name: nestjs_api_build
   image: nestjs-api-build:latest
   build:
       context: .
       target: builder
       dockerfile: ./Dockerfile
   working_dir: /usr/src/app/backend  
   stdin_open: true 
   tty: true 
   command:  npm run start:debug
   ports:
       - 3000:3000
   networks:
       - mongonetwork 
   volumes:
       - .:/usr/src/app
       - /usr/src/app/backend/node_modules
   restart: unless-stopped
   depends_on:
      - mongodb
  prod:
   container_name: nestjs_api_prod
   image: nestjs-api-prod:latest
   build:
       context: .
       target: production
       dockerfile: ./Dockerfile
   working_dir: /usr/src/app/backend  
   stdin_open: true 
   tty: true   
   command:  pm2-runtime ./dist/main.js 
   ports:
       - 3000:3000
   networks:
       - mongonetwork 
   restart: unless-stopped
   depends_on:
      - mongodb  
networks:
  mongonetwork:
    name: mongonetwork     
volumes:
    dev-vol:
        external: true